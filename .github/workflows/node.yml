name: Node.js CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
env:
  DOCKER_BUILDKIT: 1
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v3
        with:
          go-version: '1.19'
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v3
      - uses: xhyrom/setup-bun@v0.1.8
        with:
          bun-version: latest
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - run: bun i
      - run: bun nx affected --target=build --parallel --max-parallel=2 --prod
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v3
      - uses: xhyrom/setup-bun@v0.1.8
        with:
          bun-version: latest
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - run: bun i
  #      - run: bun nx affected --target=test --parallel --max-parallel=2
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v3
      - uses: xhyrom/setup-bun@v0.1.8
        with:
          bun-version: latest
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - run: bun i
      - run: bun nx affected --target=lint --parallel --max-parallel=2

  e2e:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v3
      - uses: xhyrom/setup-bun@v0.1.8
        with:
          bun-version: latest
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - run: bun i
  #      - run: bun nx affected --target=e2e --parallel --max-parallel=2
  docker:
    runs-on: ubuntu-latest
    #    needs: build
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v3
      - uses: actions/setup-go@v3
        with:
          go-version: '1.19'
      - uses: xhyrom/setup-bun@v0.1.8
        with:
          bun-version: latest
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - run: bun i
        #        Fails with go images
      #      - name: Set up QEMU
      #        uses: docker/setup-qemu-action@v2
      #      - name: Set up Docker Buildx
      #        uses: docker/setup-buildx-action@v2
      #        id: buildx
      #      - name: Docker Buildx builders
      #        run: docker buildx ls
      #      - run: docker run --privileged --rm tonistiigi/binfmt --install all
      #      - run: docker buildx create --use
      - uses: docker/metadata-action@v4
        id: metadata
        with:
          images: ghcr.io/${{ github.repository }}
      - name: Set outputs
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v0'
      - run: gcloud config list
      - id: 'auth'
        uses: 'google-github-actions/auth@v0'
        with:
          workload_identity_provider: 'projects/50185966089/locations/global/workloadIdentityPools/my-pool/providers/my-provider'
          service_account: 'docker-builder@gcp-certificates-363618.iam.gserviceaccount.com'
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - run: |-
          gcloud --quiet auth configure-docker europe-west1-docker.pkg.dev
      - name: Check outputs
        run: echo ${{ steps.vars.outputs.sha_short }}
      - run: bun nx affected --target=build --parallel --max-parallel=2 --prod
        env:
          GOOS: linux
          GOARCH: amd64
          CGO_ENABLED: 0
      - name: Build docker images
        run: bun nx affected --target=docker --parallel --max-parallel=1
        env:
          #          CGO_ENABLED: 0
          #          DOCKER_DEFAULT_PLATFORM: linux/amd64
          TAG: ${{ steps.vars.outputs.sha_short }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

